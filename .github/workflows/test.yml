name: Web App Challenge

on:
    pull_request:
        branches: 
            - main
    push:
        branches:
            - main

jobs:
   build_and_test:
      name: Build and Test
      runs-on: ubuntu-latest
      steps:
            - name: Checkout repository code
              uses: actions/checkout@v4

            - name: Build and start services with Docker Compose
              run: docker compose up --build -d 

            - name: Show Docker logs
              run: docker compose logs web

            - name: Wait for services to start and to be healthy
              uses: jaracogmbh/docker-compose-health-check-action@v1.0.0
              with:
                max-retries: 10 
                retry-interval: 10
                compose-file: "docker-compose.yml" 
                skip-exited: "true"
                skip-no-healthcheck: "true"

            - name: Verify /health endpoint returns HTTP 200 #
              run: curl --fail http://localhost:8000/health 

            - name: Run Pytest tests inside web container
              run: docker compose exec -T web pytest

            - name: Clean up Docker Compose services #
              if: always() 
              run: docker compose down

   build_and_push_to_dockerhub:
     name: Build and Push to Docker Hub (CD)
     runs-on: ubuntu-latest
     needs: build_and_test
     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
     steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/hwdevopsscratch-web

      - name: Build and push Docker image for web service
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}